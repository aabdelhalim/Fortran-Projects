module slabs
USE global
USE SUB_REINFORCEMENT
USE SUB_UP_SHEAR
USE SUB_DISTRIBUTION_FACTOR
USE SUB_MAX_SPAN_MOMENT
USE moment_and_shear_at_section
USE SUB_FIXED_END_MOMENT
USE beam_properties 
USE SUB_REINFORCEMENT
implicit none

contains 
subroutine TWO_WAY_SLAB()

REAL(double_precision):: LENGTH,WIDTH,DL,IL,LX,LY,ULTIMATE_LOAD,BETAX_POSITIVE,&
BETAY_POSITIVE,BETAX_NEGATIVE,BETAY_NEGATIVE
REAL(double_precision):: FY, FCU, H, COVER
REAL(double_precision)::MX_POSITIVE, MX_NEGATIVE, MY_NEGATIVE, MY_POSITIVE
REAL(double_precision),DIMENSION(16)::COEFFICIENTS
REAL(double_precision),DIMENSION(8)::POSITIVE,NEGATIVE,RATIO=(/1.0,1.1,1.2,1.3,1.4,1.5,1.75,2.0/)
CHARACTER(len=20)::X,Y,type_of_slab


type_of_slab='continous'

WRITE(*,*)"ENTER THE SLAB'S LENGTH AND WIDTH IN METERS." 
READ(*,*)LENGTH,WIDTH 
 

IF(LENGTH>WIDTH)THEN 
LX=WIDTH
LY=LENGTH 
ELSE 
LX=LENGTH 
LY=WIDTH
END IF 

WRITE(*,*)"ENTER THE TOTAL DEAD AND IMPOSED LOADS ON SLAB PANEL." 
READ(*,*)DL,IL 
ULTIMATE_LOAD=1.4*DL+1.6*IL
WRITE(*,*)"ENTER THE SLAB POSITION ALONG THE SHORT LENGTH ( FIRST OR INTERIOR )." 
READ(*,*)X 
WRITE(*,*)'ENTER THE SLAB POSITION ALONG THE LONG LENGTH ( FIRST OR INTERIOR ).' 
READ(*,*)Y 

CALL UCASE(X)
CALL UCASE(Y)

IF(X=="FIRST".AND.Y=="FIRST")THEN  
BETAY_POSITIVE=0.034
BETAY_NEGATIVE=0.045
OPEN(UNIT=7, FILE="CORNER.txt",status='old',action='read')
DO I=1,16
  READ(7,*)COEFFICIENTS(I)
END DO
DO I=1,15,2
    NEGATIVE((I+1)/2)=COEFFICIENTS(I)
END DO
DO I=2,16,2
      POSITIVE(I/2)=COEFFICIENTS(I)
END DO
DO I=1,8
        IF((LY/LX)<RATIO(I))THEN
        BETAX_POSITIVE=POSITIVE(I)
        BETAX_NEGATIVE=NEGATIVE(I)
        WRITE(*,*)I
        EXIT
        END IF
END DO

!================================================================================================

ELSE IF ((X=="FIRST").AND.(Y=="INTERIOR"))THEN
  BETAY_POSITIVE=0.028
  BETAY_NEGATIVE=0.037
OPEN(UNIT=7, FILE="LONG_EDGE.TXT",status='old',action='read')
DO I=1,16
  READ(7,*)COEFFICIENTS(I)
END DO
DO I=1,15,2
    NEGATIVE((I+1)/2)=COEFFICIENTS(I)
END DO
DO I=2,16,2
      POSITIVE(I/2)=COEFFICIENTS(I)
END DO
DO I=1,8
        IF((LY/LX)<RATIO(I))THEN
        BETAX_POSITIVE=POSITIVE(I)
        BETAX_NEGATIVE=NEGATIVE(I)
        WRITE(*,*)I
        EXIT
        END IF
END DO

!=====================================================================
 
ELSE IF ((X=="INTERIOR").AND.(Y=="FIRST"))THEN 
  BETAY_POSITIVE=0.037
  BETAY_NEGATIVE=0.028
  OPEN(UNIT=7, FILE="SHORT_EDGE.TXT",status='old',action='read')
  
DO I=1,16
  READ(7,*)COEFFICIENTS(I)
  END DO
  DO I=1,15,2
    NEGATIVE((I+1)/2)=COEFFICIENTS(I)
    END DO
    DO I=2,16,2
      POSITIVE(I/2)=COEFFICIENTS(I)
      END DO

      DO I=1,8
        IF((LY/LX)<RATIO(I))THEN
        BETAX_POSITIVE=POSITIVE(I)
        BETAX_NEGATIVE=NEGATIVE(I)
        WRITE(*,*)I
        EXIT
        END IF
        END DO 

!=============================================================================================  
  
ELSE IF ((X=="INTERIOR").AND.(Y=="INTERIOR"))THEN 
  BETAY_POSITIVE=0.024
  BETAY_NEGATIVE=0.032
  OPEN(UNIT=7, FILE="INTERIOR.TXT",status='old',action='read')
DO I=1,16
  READ(7,*)COEFFICIENTS(I)
  END DO
  DO I=1,15,2
    NEGATIVE((I+1)/2)=COEFFICIENTS(I)
    END DO
    DO I=2,16,2
      POSITIVE(I/2)=COEFFICIENTS(I)
      END DO

      DO I=1,8
        IF((LY/LX)<RATIO(I))THEN
        BETAX_POSITIVE=POSITIVE(I)
        BETAX_NEGATIVE=NEGATIVE(I)
        WRITE(*,*)I
        EXIT
        END IF
        END DO
!============================================        
ELSE
    type_of_slab='simply_supported'
    BETAY_POSITIVE=0.056
    BETAY_NEGATIVE=0
  OPEN(UNIT=7, FILE="SIMPLY_SUPPORTED.TXT",status='old',action='read')
DO I=1,16
  READ(7,*)COEFFICIENTS(I)
  END DO
  DO I=1,15,2
    NEGATIVE((I+1)/2)=COEFFICIENTS(I)
    END DO
    DO I=2,16,2
      POSITIVE(I/2)=COEFFICIENTS(I)
      END DO

      DO I=1,8
        IF((LY/LX)<RATIO(I))THEN
        BETAX_POSITIVE=POSITIVE(I)
        BETAX_NEGATIVE=NEGATIVE(I)
        WRITE(*,*)I
        EXIT
        END IF
        END DO  
END IF
CLOSE (UNIT=7) 

WRITE(*,'(4F6.3)')BETAX_POSITIVE,BETAY_POSITIVE,BETAX_NEGATIVE,BETAY_NEGATIVE
WRITE(5,'(4F6.3)')BETAX_POSITIVE,BETAY_POSITIVE,BETAX_NEGATIVE,BETAY_NEGATIVE

MX_POSITIVE=BETAX_POSITIVE*ULTIMATE_LOAD*LX**2 
MX_NEGATIVE=BETAX_NEGATIVE*ULTIMATE_LOAD*LX**2 
MY_POSITIVE=BETAY_POSITIVE*ULTIMATE_LOAD*LX**2
MY_NEGATIVE=BETAY_NEGATIVE*ULTIMATE_LOAD*LX**2

WRITE(*,*) " ENTER THE DEPTH OF SLAB."
READ(*,*) h
WRITE(*,*)'ENTER Fcu'
READ(*,*)Fcu
WRITE(*,*)'ENTER Fy '
READ(*,*)FY
WRITE(*,*)'ENTER COVER IN mm'
READ(*,*)cover

WRITE(*,'(//T20,"POSITIVE MOMENT",/,T20,15("="),/)')
WRITE(*,'(/T5,"A/ X-DIRECTION",/,T8,11("-"),/)')
WRITE(5,'(//T20,"POSITIVE MOMENT",/,T20,15("="),/)')
WRITE(5,'(/T5,"A/ X-DIRECTION",/,T8,11("-"),/)')
CALL  SLAB_REINFORCEMENT(MX_POSITIVE,h,1000.d0,fcu,fy,cover)
WRITE(*,'(/T5,"B/ Y-DIRECTION",/,T8,11("-"),/)')
WRITE(5,'(/T5,"B/ Y-DIRECTION",/,T8,11("-"),/)')
CALL  SLAB_REINFORCEMENT(MY_POSITIVE,h,1000.d0,fcu,fy,cover)

IF(BETAX_NEGATIVE==0) GOTO 144
WRITE(*,'(//T20,"NEGATIVE MOMENT",/,T20,15("="),/)')
WRITE(*,'(//T20,"NEGATIVE MOMENT",/,T20,15("="),/)')
WRITE(5,'(//T20,"NEGATIVE MOMENT",/,T20,15("="),/)')
WRITE(5,'(//T20,"NEGATIVE MOMENT",/,T20,15("="),/)')
CALL  SLAB_REINFORCEMENT(MX_NEGATIVE,h,1000.d0,fcu,fy,cover)
WRITE(*,'(/T5,"B/ Y-DIRECTION",/,T8,11("-"),/)')
CALL  SLAB_REINFORCEMENT(MY_NEGATIVE,h,1000.d0,fcu,fy,cover)

144 CALL SLAB_DEFLECTION(MX_POSITIVE,h,1000.D0,fcu,fy,cover,Lx,type_of_slab)


END SUBROUTINE 

!================================================================================================================

SUBROUTINE FLAT_SLAB(TRIAL)
IMPLICIT NONE

INTEGER,SAVE::X_SPANS,Y_SPANS,NO_OF_X_STRIPS,NO_OF_Y_STRIPS,XSPAN,YSPAN,XSUPPORT,YSUPPORT
REAL(double_precision)::DROP,DEPTH_OF_DROP,DEPTH_OF_SLAB,NULT, W, MAX_SPAN_MOMENT, SUPPORT_MOMENT,FCU,FY,COVER,M,MOMENT
REAL(double_precision)::MAX_SHEARX,MAX_SHEARY,MAXIMUM_SHEAR,MOMENT_ON_LONGEST_SPAN
REAL(double_precision)::SPACING,LONGEST_SPAN,HEAD=0,RATIOX,RATIOY
REAL(double_precision),ALLOCATABLE,DIMENSION(:)::X_LENGTH,Y_LENGTH,X_STRIP,Y_STRIP,X_COLUMN_STRIP,X_MIDDLE_STRIP
REAL(double_precision),ALLOCATABLE,DIMENSION(:)::Y_COLUMN_STRIP,Y_MIDDLE_STRIP
CHARACTER*256::CHOICE,DIRECTION
CHARACTER(LEN=*),INTENT(IN)::TRIAL
SAVE::X_SPANS,Y_SPANS,X_LENGTH,Y_LENGTH


	WRITE(*,*)"ENTER THE DEPTH OF SLAB IN MM."
    READ(*,*)DEPTH_OF_SLAB
    WRITE(*,*)"ENTER THE ULTIMATE LOAD ON SLAB IN KN/M2."
    READ(*,*)NULT
    WRITE(*,*)'ENTER Fcu.'
	READ(*,*)Fcu
	WRITE(*,*)'ENTER Fy. '
	READ(*,*)FY
	WRITE(*,*)'ENTER COVER IN MM.'
	READ(*,*)COVER

IF (TRIAL=='NO')THEN
WRITE(*,*)"ENTER THE NUMBER OF SPANS ON X AND Y AXIS RESPECTIVELY."
READ(*,*)X_SPANS,Y_SPANS
ALLOCATE(X_LENGTH(X_SPANS),Y_LENGTH(Y_SPANS))


 WRITE(*,*)"ENTER THE LENGHTS OF SPANS ON X DIRECTION."
  DO I=1,X_SPANS
  READ(*,*)X_LENGTH(I)
  END DO
  
WRITE(*,*)"ENTER THE LENGHTS OF SPANS ON Y DIRECTION."
DO I=1,Y_SPANS
  READ(*,*)Y_LENGTH(I)
  END DO

END IF

  NO_OF_X_STRIPS=Y_SPANS+1
  NO_OF_Y_STRIPS=X_SPANS+1

  ALLOCATE(X_STRIP(NO_OF_X_STRIPS), Y_STRIP(NO_OF_Y_STRIPS))
  ALLOCATE(X_COLUMN_STRIP(NO_OF_X_STRIPS),X_MIDDLE_STRIP(NO_OF_X_STRIPS),Y_COLUMN_STRIP(NO_OF_Y_STRIPS)&
  &,Y_MIDDLE_STRIP(NO_OF_Y_STRIPS))
  DEPTH_OF_DROP=0
  drop=0
  
  WRITE(*,*)"IS COLUMN HEAD PROVIDED? [ YES ] OR [ NO ]"
  READ(*,*)CHOICE
  CALL UCASE(CHOICE)
  IF(CHOICE=="YES")THEN
    WRITE(*,*)"ENTER THE EFFECTIVE DIAMETER [ IN METERS ] OF COLUMN HEAD."
    READ(*,*)HEAD
    END IF
  
  WRITE(*,*)"ARE COLUMN DROPS PROVIDED? [ YES ] OR [ NO ]"
  READ(*,*)CHOICE
  CALL UCASE(CHOICE)
  IF(CHOICE=="YES")THEN
    WRITE(*,*)"ENTER THE WIDTH [ IN METERS ] AND DEPTH [ IN MILLIMETERS ] OF COLUMN DROP."
    READ(*,*)DROP,DEPTH_OF_DROP
    IF(DROP>MAXVAL(X_LENGTH)/3)THEN
  X_STRIP(1)=Y_LENGTH(1)/2
  X_COLUMN_STRIP(1)=DROP/2
  X_MIDDLE_STRIP(1)=X_STRIP(1)-DROP/2
  X_STRIP(NO_OF_X_STRIPS)=Y_LENGTH(Y_SPANS)/2
  X_COLUMN_STRIP(NO_OF_X_STRIPS)=DROP/2
  X_MIDDLE_STRIP(NO_OF_X_STRIPS)=X_STRIP(NO_OF_X_STRIPS)-DROP/2
  
	DO I=2,NO_OF_X_STRIPS-1
    X_STRIP(I)=(Y_LENGTH(I)+Y_LENGTH(I-1))/2
    X_COLUMN_STRIP(I)=DROP
    X_MIDDLE_STRIP(I)=X_STRIP(I)-DROP
    END DO
    END IF
    IF(DROP>MAXVAL(Y_LENGTH)/3)THEN
    Y_STRIP(1)=X_LENGTH(1)/2
    Y_COLUMN_STRIP(1)=DROP/2
    Y_MIDDLE_STRIP(1)=Y_STRIP(1)-DROP/2
    Y_STRIP(NO_OF_Y_STRIPS)=X_LENGTH(X_SPANS)/2
    Y_COLUMN_STRIP(NO_OF_Y_STRIPS)=DROP/2
    Y_MIDDLE_STRIP(NO_OF_Y_STRIPS)=Y_STRIP(NO_OF_Y_STRIPS)-DROP/2

  
	DO I=2,NO_OF_Y_STRIPS-1
    Y_STRIP(I)=(X_LENGTH(I)+X_LENGTH(I-1))/2
    Y_COLUMN_STRIP(I)=DROP
    Y_MIDDLE_STRIP(I)=Y_STRIP(I)-DROP
    END DO
    END IF
    
	ELSE

      X_STRIP(1)=Y_LENGTH(1)/2
      X_COLUMN_STRIP(1)=X_STRIP(1)/2
      X_MIDDLE_STRIP(1)=X_STRIP(1)-X_COLUMN_STRIP(1)
  	  X_STRIP(NO_OF_X_STRIPS)=Y_LENGTH(Y_SPANS)/2
      X_COLUMN_STRIP(NO_OF_X_STRIPS)=X_STRIP(NO_OF_X_STRIPS)/2
      X_MIDDLE_STRIP(NO_OF_X_STRIPS)=X_STRIP(NO_OF_X_STRIPS)-X_COLUMN_STRIP(NO_OF_X_STRIPS)
  
	DO I=2,NO_OF_X_STRIPS-1
    X_STRIP(I)=(Y_LENGTH(I)+Y_LENGTH(I-1))/2
    X_COLUMN_STRIP(I)=X_STRIP(I)/2
    X_MIDDLE_STRIP(I)=X_STRIP(I)-X_COLUMN_STRIP(I)
    END DO

      Y_STRIP(1)=X_LENGTH(1)/2
      Y_COLUMN_STRIP(1)=Y_STRIP(1)/2
      Y_MIDDLE_STRIP(1)=Y_STRIP(1)-Y_COLUMN_STRIP(1)
  	  Y_STRIP(NO_OF_Y_STRIPS)=X_LENGTH(X_SPANS)/2
      Y_COLUMN_STRIP(NO_OF_Y_STRIPS)=Y_STRIP(NO_OF_Y_STRIPS)/2
      Y_MIDDLE_STRIP(NO_OF_Y_STRIPS)=Y_STRIP(NO_OF_Y_STRIPS)-Y_COLUMN_STRIP(NO_OF_Y_STRIPS)
  
	DO I=2,NO_OF_Y_STRIPS-1
    Y_STRIP(I)=(X_LENGTH(I)+X_LENGTH(I-1))/2
    Y_COLUMN_STRIP(I)=Y_STRIP(I)/2
    Y_MIDDLE_STRIP(I)=Y_STRIP(I)-Y_COLUMN_STRIP(I)
    END DO
    END IF
    
    RATIOX=MAXVAL(X_MIDDLE_STRIP)/(MAXVAL(X_LENGTH)/2)
    RATIOY=MAXVAL(Y_MIDDLE_STRIP)/(MAXVAL(Y_LENGTH)/2)
    
    1234 WRITE(*,'(/80("="),/"WOULD YOU LIKE TO:"//"1) DESIGN FULL FLOOR."/"2) DESIGN SPECIFIC STRIP."/&
    &"3) SHEAR CHECKS"/"4) CHECK DEFLECTION"/)')
    READ(*,*)CHOICE
    MAJOR:IF (CHOICE=='1')THEN
      !======================================================================
      !FULL FLOOR DESIGN.
	  !FIRST: X DIRECTION.
	  !MIDDLE STRIP
        W=NULT*MAXVAL(X_STRIP)
        WRITE(*,'(/80("=")///"FIRST: DESIGN OF THE X DIRECTION."///80("=")/)')
        WRITE(5,'(/80("=")///"FIRST: DESIGN OF THE X DIRECTION."///80("=")/)')
        CALL SLAB_BEAM(X_SPANS,X_LENGTH,W,DISPLAY='YES',FIND_MAXIMUM='YES',SPAN_MOMENT=MAX_SPAN_MOMENT,&
          SUPPORT_MOMENT=SUPPORT_MOMENT)
        M=0.45*MAX_SPAN_MOMENT/MAXVAL(X_MIDDLE_STRIP)*RATIOX
		WRITE(*,'(/80("=")//" MIDDLE STRIP."/)')
        WRITE(*,'(/80("=")/" 1 - POSITIVE MOMENT REINFORCEMENT:"///)')
        WRITE(5,'(/80("=")//" MIDDLE STRIP."/)')
        WRITE(5,'(/80("=")/" 1 - POSITIVE MOMENT REINFORCEMENT:"///)')
        CALL SLAB_REINFORCEMENT(M,DEPTH_OF_SLAB,1000.d0,fcu,fy,cover)
          
        WRITE(*,'(/80("=")/" 2 - NEGATIVE MOMENT REINFORCEMENT:"///)')
        WRITE(5,'(/80("=")/" 2 - NEGATIVE MOMENT REINFORCEMENT:"///)')
          SUPPORT_MOMENT=SUPPORT_MOMENT+NULT*MAXVAL(X_STRIP)*MAXVAL(Y_STRIP)*0.15*HEAD
          M=0.25*SUPPORT_MOMENT/MAXVAL(X_MIDDLE_STRIP)*RATIOX
          CALL SLAB_REINFORCEMENT(M,DEPTH_OF_SLAB,1000.d0,fcu,fy,cover)
        
        !=============================================================================================
        !COLUMN STRIP

        WRITE(*,'(/80("=")//" COLUMN STRIP."/)')
        WRITE(*,'(/80("=")/" 1 - POSITIVE MOMENT REINFORCEMENT:"///)')
        WRITE(5,'(/80("=")//" COLUMN STRIP."/)')
        WRITE(5,'(/80("=")/" 1 - POSITIVE MOMENT REINFORCEMENT:"///)')
          M=(1-0.45*RATIOX)*MAX_SPAN_MOMENT/MAXVAL(X_COLUMN_STRIP)
          CALL SLAB_REINFORCEMENT(M,DEPTH_OF_SLAB,1000.d0,fcu,fy,cover)
          
        WRITE(*,'(/80("=")/" 2 - NEGATIVE MOMENT REINFORCEMENT:"///)')
		WRITE(5,'(/80("=")/" 2 - NEGATIVE MOMENT REINFORCEMENT:"///)')
		  IF(DEPTH_OF_DROP>0) DEPTH_OF_SLAB=DEPTH_OF_SLAB+DEPTH_OF_DROP
          M=(1-0.25*RATIOX)*SUPPORT_MOMENT/MAXVAL(X_COLUMN_STRIP)
          CALL SLAB_REINFORCEMENT(M,DEPTH_OF_SLAB,1000.d0,fcu,fy,cover)
          DEPTH_OF_SLAB=DEPTH_OF_SLAB-DEPTH_OF_DROP
        !======================================================================
	  !SECOND: Y DIRECTION.
	  !MIDDLE STRIP
        W=NULT*MAXVAL(Y_STRIP)
        WRITE(*,'(/80("=")///"SECOND: DESIGN OF THE Y DIRECTION."///80("=")/)')
        WRITE(5,'(/80("=")///"SECOND: DESIGN OF THE Y DIRECTION."///80("=")/)')
        CALL SLAB_BEAM(Y_SPANS,Y_LENGTH,W,DISPLAY='YES',FIND_MAXIMUM='YES',SPAN_MOMENT=MAX_SPAN_MOMENT,&
          SUPPORT_MOMENT=SUPPORT_MOMENT)
       	WRITE(*,'(/80("=")//" MIDDLE STRIP."/)') 
		WRITE(*,'(/80("=")/" 1 - POSITIVE MOMENT REINFORCEMENT:"///)')
        WRITE(5,'(/80("=")//" MIDDLE STRIP."/)') 
		WRITE(5,'(/80("=")/" 1 - POSITIVE MOMENT REINFORCEMENT:"///)')
        M=0.45*MAX_SPAN_MOMENT/MAXVAL(Y_MIDDLE_STRIP)*RATIOY
        CALL SLAB_REINFORCEMENT(M,DEPTH_OF_SLAB,1000.d0,fcu,fy,cover)

        WRITE(*,'(/80("=")/" 2 - NEGATIVE MOMENT REINFORCEMENT:"///)')
        WRITE(5,'(/80("=")/" 2 - NEGATIVE MOMENT REINFORCEMENT:"///)')
          SUPPORT_MOMENT=SUPPORT_MOMENT+NULT*MAXVAL(X_STRIP)*MAXVAL(Y_STRIP)*0.15*HEAD
          M=0.25*SUPPORT_MOMENT/MAXVAL(Y_MIDDLE_STRIP)*RATIOY
          CALL SLAB_REINFORCEMENT(M,DEPTH_OF_SLAB,1000.d0,fcu,fy,cover)
        
        !=============================================================================================
        !COLUMN STRIP
        WRITE(*,'(/80("=")//" COLUMN STRIP."/)')
        WRITE(*,'(/80("=")/" 1 - POSITIVE MOMENT REINFORCEMENT:"///)')
        WRITE(5,'(/80("=")//" COLUMN STRIP."/)')
        WRITE(5,'(/80("=")/" 1 - POSITIVE MOMENT REINFORCEMENT:"///)')
          M=(1-0.45*RATIOY)*MAX_SPAN_MOMENT/MAXVAL(Y_COLUMN_STRIP)
          CALL SLAB_REINFORCEMENT(M,DEPTH_OF_SLAB,1000.d0,fcu,fy,cover)
          
        WRITE(*,'(/80("=")/" 2 - NEGATIVE MOMENT REINFORCEMENT:"///)')
        WRITE(5,'(/80("=")/" 2 - NEGATIVE MOMENT REINFORCEMENT:"///)')
          IF(DEPTH_OF_DROP>0) DEPTH_OF_SLAB=DEPTH_OF_SLAB+DEPTH_OF_DROP
          M=(1-0.25*RATIOY)*SUPPORT_MOMENT/MAXVAL(Y_COLUMN_STRIP)
          CALL SLAB_REINFORCEMENT(M,DEPTH_OF_SLAB,1000.d0,fcu,fy,cover)
		  DEPTH_OF_SLAB=DEPTH_OF_SLAB-DEPTH_OF_DROP
            


      ELSE IF (CHOICE=='2') THEN
      !======================================================================
      



    !========================================================================
     !SPECIFIC STRIP.
        
	WRITE(*,*)"ENTER THE DIRECTION OF REINFORCEMENT DESIGN. [ X ] OR [ Y ]"
    READ(*,*)DIRECTION
    CALL UCASE(DIRECTION)

    IF(DIRECTION=="X")THEN
      WRITE(*,*)"ENTER 1 FOR [ MIDDLE STRIP ] OR 2 FOR [ COLUMN STRIP ]."
      READ(*,*)CHOICE
      !======================================================================
      !MIDDLE STRIP
      IF(CHOICE=="1")THEN 
        WRITE(*,*)"ENTER THE POSITION OF SPAN IN THE Y-DIRECTION OF THE DESIRED MIDDLE STRIP."
        READ(*,*)YSPAN
        IF (X_STRIP(YSPAN)<X_STRIP(YSPAN+1)) YSPAN=YSPAN+1
          W=NULT*X_STRIP(YSPAN)
          CALL SLAB_BEAM(X_SPANS,X_LENGTH,W,DISPLAY='YES',DIRECTION=DIRECTION,STRIP='MIDDLE',MOMENT=MOMENT)
          M=MOMENT/X_MIDDLE_STRIP(YSPAN)
          CALL SLAB_REINFORCEMENT(M,DEPTH_OF_SLAB,1000.d0,fcu,fy,cover)
   
        
      ELSE IF (CHOICE=="2")THEN
        !=============================================================================================
        !COLUMN STRIP
        WRITE(*,*)"ENTER THE COLUMN NUMBER IN THE Y-DIRECTION OF THE DESIRED COLUMN STRIP."
        READ(*,*)YSUPPORT
        W=NULT*X_STRIP(YSUPPORT)
          CALL SLAB_BEAM(X_SPANS,X_LENGTH,W,DISPLAY='YES',DIRECTION=DIRECTION,STRIP='COLUMN',MOMENT=MOMENT)
          M=MOMENT/X_COLUMN_STRIP(YSUPPORT)
          IF(M<0) DEPTH_OF_SLAB=DEPTH_OF_SLAB+DEPTH_OF_DROP
          CALL SLAB_REINFORCEMENT(M,DEPTH_OF_SLAB,1000.d0,fcu,fy,cover)
  		  DEPTH_OF_SLAB=DEPTH_OF_SLAB-DEPTH_OF_DROP
      END IF

        
      !========================================================================
      !Y-DIRECTON
      ELSE IF(DIRECTION=="Y")THEN
      WRITE(*,*)"ENTER 1 FOR [ MIDDLE STRIP ] OR 2 FOR [ COLUMN STRIP ]."
      READ(*,*)CHOICE
      !======================================================================
      !MIDDLE STRIP
      IF(CHOICE=="1")THEN 
        WRITE(*,*)"ENTER THE POSITION OF SPAN IN THE X-DIRECTION OF THE DESIRED MIDDLE STRIP."
        READ(*,*)XSPAN
        IF (Y_STRIP(XSPAN)<Y_STRIP(XSPAN+1)) XSPAN=XSPAN+1
        W=NULT*Y_STRIP(XSPAN)
          CALL SLAB_BEAM(Y_SPANS,Y_LENGTH,W,DISPLAY='YES',DIRECTION=DIRECTION,STRIP='MIDDLE',MOMENT=MOMENT)
          M=MOMENT/Y_MIDDLE_STRIP(XSPAN)
          CALL SLAB_REINFORCEMENT(M,DEPTH_OF_SLAB,1000.d0,fcu,fy,cover)
        
      ELSE IF (CHOICE=="2")THEN
        !=============================================================================================
        !COLUMN STRIP
        WRITE(*,*)"ENTER THE COLUMN NUMBER IN THE X-DIRECTION OF THE DESIRED COLUMN STRIP."
        READ(*,*)XSUPPORT
        W=NULT*Y_STRIP(XSUPPORT)
          CALL SLAB_BEAM(Y_SPANS,Y_LENGTH,W,DISPLAY='YES',DIRECTION=DIRECTION,STRIP='COLUMN',MOMENT=MOMENT)
          M=MOMENT/Y_COLUMN_STRIP(XSUPPORT)
          IF(M<0) DEPTH_OF_SLAB=DEPTH_OF_SLAB+DEPTH_OF_DROP
          CALL SLAB_REINFORCEMENT(M,DEPTH_OF_SLAB,1000.d0,fcu,fy,cover)
 		  DEPTH_OF_SLAB=DEPTH_OF_SLAB-DEPTH_OF_DROP    

     END IF    
   END IF
  
  ELSE IF (CHOICE=='3') THEN

    
    IF(DEPTH_OF_DROP>0) DEPTH_OF_SLAB=DEPTH_OF_SLAB+DEPTH_OF_DROP
    W=NULT*MAXVAL(X_STRIP) 
    CALL SLAB_BEAM(X_SPANS,X_LENGTH,W,FIND_MAXIMUM='YES',SPAN_MOMENT=MAX_SPAN_MOMENT,SUPPORT_MOMENT=SUPPORT_MOMENT,&
      MAX_SHEAR=MAX_SHEARX)
    M=0.75*SUPPORT_MOMENT/MAXVAL(X_COLUMN_STRIP)
   
    W=NULT*MAXVAL(Y_STRIP)  
    CALL SLAB_BEAM(Y_SPANS,Y_LENGTH,W,FIND_MAXIMUM='YES',SPAN_MOMENT=MAX_SPAN_MOMENT,SUPPORT_MOMENT=SUPPORT_MOMENT,&
      MAX_SHEAR=MAX_SHEARY)
    MOMENT=0.75*SUPPORT_MOMENT/MAXVAL(Y_COLUMN_STRIP)
    IF (MOMENT>M)M=MOMENT        
  
    CALL SLAB_REINFORCEMENT(M,DEPTH_OF_SLAB,1000.d0,fcu,fy,cover)
    DEPTH_OF_SLAB=DEPTH_OF_SLAB-DEPTH_OF_DROP
   
    IF(MAX_SHEARX>MAX_SHEARY)THEN
      MAXIMUM_SHEAR=MAX_SHEARX
    ELSE
      MAXIMUM_SHEAR=MAX_SHEARY
    END IF
            
    IF(DEPTH_OF_DROP>0) THEN
      CALL SLAB_SHEAR(MAXIMUM_SHEAR,FCU,DEPTH_OF_SLAB,COVER,DROP,DEPTH_OF_DROP,HEAD)
    ELSE
      CALL SLAB_SHEAR(MAXIMUM_SHEAR,FCU,DEPTH_OF_SLAB,COVER,HEAD=HEAD)
    END IF
     
  ELSE IF (CHOICE=='4')THEN
   
   IF (MAXVAL(X_LENGTH)>MAXVAL(Y_LENGTH)) THEN
     LONGEST_SPAN=MAXVAL(X_LENGTH)
     ELSE
     LONGEST_SPAN=MAXVAL(Y_LENGTH)
   END IF  
   WRITE(*,'("LONGEST SPAN=",F5.2," METERS"/)')LONGEST_SPAN
   WRITE(5,'("LONGEST SPAN=",F5.2," METERS"/)')LONGEST_SPAN

   IF (MAXVAL(X_LENGTH)>MAXVAL(Y_LENGTH)) THEN
     W=NULT*MAXVAL(X_STRIP)
     CALL SLAB_BEAM(X_SPANS,X_LENGTH,W,MOMENT_ON_LONGEST_SPAN=MOMENT_ON_LONGEST_SPAN)
     write(*,*)MOMENT_ON_LONGEST_SPAN
     M=0.45*MOMENT_ON_LONGEST_SPAN/MAXVAL(X_MIDDLE_STRIP)
     write(*,*)m
     IF(drop>=maxval(x_length/3))then
       CALL SLAB_DEFLECTION(M,DEPTH_OF_SLAB,1000.D0,fcu,fy,cover,MAXVAL(X_STRIP),'continous')  
     Else 
       CALL SLAB_DEFLECTION(M,DEPTH_OF_SLAB,1000.D0,fcu,fy,cover,MAXVAL(X_STRIP),'continous','flat_slab')   
     END IF  
   ELSE 
     W=NULT*MAXVAL(Y_STRIP)
     CALL SLAB_BEAM(Y_SPANS,Y_LENGTH,W,MOMENT_ON_LONGEST_SPAN=MOMENT_ON_LONGEST_SPAN)
     write(*,*)moment_on_longest_span
     M=0.45*MOMENT_ON_LONGEST_SPAN/MAXVAL(Y_MIDDLE_STRIP)
     write(*,*)M
     IF(drop>=maxval(Y_length/3))then
       CALL SLAB_DEFLECTION(M,DEPTH_OF_SLAB,1000.D0,fcu,fy,cover,MAXVAL(Y_STRIP),'continous')  
     Else 
       CALL SLAB_DEFLECTION(M,DEPTH_OF_SLAB,1000.D0,fcu,fy,cover,MAXVAL(Y_STRIP),'continous','flat_slab')  
     END IF
   END IF 
   
  
END IF MAJOR



    
   WRITE(*,'(/80("=")/"WOULD YOU LIKE TO CONTINUE DESIGN? [ YES ] OR [ NO ]"/80("=")/)')
   READ(*,*)CHOICE
   CALL UCASE(CHOICE)
   IF(CHOICE=='YES') GOTO 1234
   

END SUBROUTINE FLAT_SLAB 

!======================================================================================================
SUBROUTINE SLAB_BEAM(N,SPANLENGTH,W,DISPLAY,FIND_MAXIMUM,SPAN_MOMENT,SUPPORT_MOMENT,&
&STRIP,DIRECTION,MOMENT,MAX_SHEAR,MOMENT_ON_LONGEST_SPAN)

INTEGER,INTENT(IN)::N
INTEGER::NO,SECTION,NPOINTS
REAL(double_precision)::Z,X,INTERVAL,max_mt_location,span_moments(N),SUPPORT_MOMENTS(n+1)
REAL(double_precision),INTENT(IN),DIMENSION(N)::SPANLENGTH
REAL(double_precision),INTENT(IN)::W
REAL(double_precision),ALLOCATABLE,DIMENSION(:)::df,fem,bal,co,endmoment,v,reaction, mt 
INTEGER:: SPAN_NUMBER, SUPPORT_NUMBER
REAL(double_precision),INTENT(OUT),OPTIONAL:: SPAN_MOMENT, SUPPORT_MOMENT, MOMENT,MAX_SHEAR,MOMENT_ON_LONGEST_SPAN
CHARACTER*256::FORVAR,FREE_END,FIXED_END,find_max,CHOICE
CHARACTER(LEN=*),INTENT(IN),OPTIONAL::find_maximum,DISPLAY,STRIP,DIRECTION

free_end='1'
fixed_end='1'
ALLOCATE(df(n*2),fem(n*2),bal(n*2),co(n*2),endmoment(n*2),reaction(n+1),v(n*2))

CALL BEAM_PROPERTIES_INPUT('YES',N,spanlength,w)
CALL DISTRIBUTION_FACTOR (df,n,spanlength,free_end,fixed_end)

CALL fixed_end_MOMENT (fem) 

        
IF(PRESENT(FIND_MAXIMUM)) THEN
  FIND_MAX='YES'
  ELSE
    FIND_MAX='NO'
END IF
IF (PRESENT(DISPLAY)) THEN
WRITE(*,*)"ENTER THE NUMBER OF ITERATIONS."
READ (*,*) no
ELSE 
  no=30
END IF


FORVAR="(/1H|,  (4H----,F5.2,1X,1HM,2X,5H----|))"
IF (PRESENT(DISPLAY))WRITE(FORVAR(7:8),'(I2)')N
IF (PRESENT(DISPLAY))WRITE(*,FORVAR)SPANLENGTH
IF (PRESENT(DISPLAY))WRITE(5,FORVAR)SPANLENGTH

IF (PRESENT(DISPLAY))WRITE(*,31)
IF (PRESENT(DISPLAY))WRITE(5,31)
31 FORMAT(/79('-'))

IF (PRESENT(DISPLAY))WRITE(*,30)'D.F',df
IF (PRESENT(DISPLAY))WRITE(5,30)'D.F',df
30 FORMAT(A,T5,100(F8.2,1X))
IF (PRESENT(DISPLAY))WRITE(*,30)'FEM',fem
IF (PRESENT(DISPLAY))WRITE(5,30)'FEM',fem

endmoment=fem

MAJOR: do j=1,no
  
  ALPHA:DO i=1,n*2
  	
    IF  (i==1.AND.(free_end=='L'.OR.free_end=='LR')) THEN               
        bal(i)=0

        ELSE IF(i==n*2.AND.(free_end=='R'.OR.free_end=='LR')) THEN    
        bal(i)=0 
	    
		ELSE IF (i==1)THEN
    	bal(1)= -fem(1)*df(1)
    
		ELSE IF(i==n*2) THEN
      	bal(n*2)= -fem(n*2)*df(n*2)
      
		ELSE IF((MOD(REAL(I),2.0))==0) THEN
        bal(i) = -(df(i)*(fem(i)+fem(i+1)))
      
		ELSE 
        bal(i)= -(df(i)*(fem(i)+fem(i-1)))
   	END IF
  END DO ALPHA 
  
   IF (PRESENT(DISPLAY))  WRITE(*,30)'BAL',bal
   IF (PRESENT(DISPLAY))  WRITE(5,30)'BAL',bal
  endmoment   = endmoment + bal
  IF (j==no) EXIT MAJOR

  BETA: DO i=1,n*2
    IF((MOD(REAL(i),2.0))==0) THEN
      co (i) = bal(i-1)/2

      ELSE 
      co (i)= bal(i+1)/2
    END IF
  END DO BETA       
        
  endmoment   = endmoment + co
  fem = co
  IF (PRESENT(DISPLAY)) WRITE(*,30)'C.O',co
  IF (PRESENT(DISPLAY)) WRITE(5,30)'C.O',co
   
END DO MAJOR

IF (PRESENT(DISPLAY))WRITE(*,32)'MT',endmoment
IF (PRESENT(DISPLAY))WRITE(5,32)'MT',endmoment
32 FORMAT(79('-')/A,T5,100(F8.2,1X),79('-'))

CALL UP_SHEAR (v,ENDMOMENT)


DO i=1,n+1
  IF (i==1) THEN
    reaction(i)=v(i)
    ELSE IF (i==n+1) THEN
    reaction(i)=v(2*n)
    ELSE 
    reaction(i)=v(2*i-1)+v(2*i-2)
  END IF  
END DO
IF (PRESENT(DISPLAY)) WRITE(*,32)'v',v
IF (PRESENT(DISPLAY)) WRITE(5,32)'v',v

IF (PRESENT(DISPLAY))WRITE(*,33)'R',reaction
IF (PRESENT(DISPLAY))WRITE(5,33)'R',reaction
33 FORMAT(79('-')/A,T5,100(F8.2,2X),79('-')/)

section=0
npoints = 10*n+1
IF(ALLOCATED(MT))DEALLOCATE(MT)                                             !ASSUME EVERY SPAN HAS 10 POINTS.
ALLOCATE(mt(0:npoints-1))
interval = total_beam_length/(npoints-1)


SPAN:DO i=1,n

	interval:DO    
    	x=section*interval                                    
        z=x-dist(i)                  !Z IS THE DISTANCE FROM THE SPAN BEGINNING,X IS THE DISTANCE FROM THE BEGINNING OF BEAM

        mt(section)=moment_at_section (ENDMOMENT, v, I, Z)

        section=section+1 
        IF (section*interval-dist(i)>spanlength(i)+interval/4) EXIT INTERVAL               
	END DO INTERVAL
END DO SPAN                              
IF (PRESENT(DISPLAY))CALL plot ( mt, npoints, 0.d0, 0.d0, .TRUE., 5)
IF (PRESENT(DISPLAY))CALL plot ( mt, npoints, 0.d0, 0.d0, .TRUE., 2) 
  
IF(PRESENT(MAX_SHEAR)) MAX_SHEAR=MAXVAL(REACTION)
  
IF( FIND_MAX=='YES')THEN
  DO I=1,N
 CALL max_span_moment( I , endmoment, v, span_moments(i), max_mt_location)
 SUPPORT_MOMENTS(i)=ENDMOMENT(2*i-1)
  End DO
  SUPPORT_MOMENTS(n+1)=ENDMOMENT(2*N)
  span_moment=MAXVAL(span_moments)
  SUPPORT_MOMENT=minval(SUPPORT_MOMENTS)
   
!===============================================================
ELSE IF (PRESENT(MOMENT))THEN

WRITE(*,'(//,"ENTER 1 FOR [ +VE MOMENTS ] OR 2 FOR [ -VE MOMENTS ]")')
        READ(*,*)CHOICE
        IF (CHOICE=='1')THEN   
          WRITE(*,'("ENTER THE POSITION OF SPAN IN THE ",A1,"-DIRECTION.")')DIRECTION
          READ(*,*)SPAN_NUMBER  
          CALL max_span_moment( SPAN_NUMBER ,  endmoment, v, moment, max_mt_location)
          IF(STRIP=='MIDDLE') MOMENT=0.45*MOMENT
          IF(STRIP=='COLUMN') MOMENT=0.55*MOMENT  
        ELSE
          WRITE(*,'("ENTER THE POSITION OF SUPPORT IN THE ",A1,"-DIRECTION.")')DIRECTION
          READ(*,*)SUPPORT_NUMBER
          IF (SUPPORT_NUMBER==N+1) THEN
            MOMENT=-ENDMOMENT(2*N)
          ELSE 
            MOMENT=ENDMOMENT(2*SUPPORT_NUMBER-1)
          END IF
          IF(STRIP=='MIDDLE') MOMENT=0.25*MOMENT
          IF(STRIP=='COLUMN') MOMENT=0.75*MOMENT   
        END IF

ELSE IF (PRESENT(MOMENT_ON_LONGEST_SPAN)) THEN

   DO I=1,N
     IF (SPANLENGTH(I)==MAXVAL(SPANLENGTH)) J=I
   END DO       
   CALL max_span_moment( J , endmoment, v, MOMENT_ON_LONGEST_SPAN, max_mt_location)
   
END IF
   
END SUBROUTINE SLAB_BEAM

!====================================================================================================

SUBROUTINE SLAB_SHEAR(MAXIMUM_SHEAR,FCU,DEPTH_OF_SLAB,COVER,DROP,DEPTH_OF_DROP,HEAD)
REAL(double_precision)::DEPTH_OF_SLAB,FCU,COVER,MAXIMUM_SHEAR,PERIMETER,COLUMNX,COLUMNY,V,DIA,SPACING,ASP,VC,D,HEAD
REAL(double_precision),OPTIONAL,INTENT(INOUT)::DROP
REAL(double_precision),OPTIONAL::DEPTH_OF_DROP
CHARACTER*256::CHOICE

WRITE(*,13)
WRITE(5,13)
13 FORMAT(///T30,'SHEAR CHECK')
WRITE(*,14)
WRITE(5,14)
14 FORMAT(T30,'===========')

  
  WRITE(*,*)"ENTER THE COLUMN DIMENTIONS."
  READ(*,*)COLUMNX,COLUMNY
  PERIMETER=2*(COLUMNX+COLUMNY)
  IF (HEAD>0) PERIMETER=3.14*HEAD*1000
WRITE(*,*)"ENTER THE DIAMETER AND SPACING USED FOR THE TOP REINFORCEMENT OF COLUMN STRIP."
READ(*,*)DIA,SPACING

MAXIMUM_SHEAR=1.15*MAXIMUM_SHEAR
D=DEPTH_OF_SLAB-COVER-1.5*DIA

 IF(PRESENT(DROP)) D=DEPTH_OF_SLAB-COVER-1.5*DIA+DEPTH_OF_DROP

WRITE(*,133)
WRITE(5,133)
133 FORMAT(///T30,'SHEAR AT THE FACE OF THE SUPPORT')
WRITE(*,'(T30,31("=")/)')


  WRITE(*,'(//" SHEAR PERIMETER =", F10.2//)')PERIMETER
  WRITE(5,'(//" SHEAR PERIMETER =", F10.2//)')PERIMETER
  10 V=MAXIMUM_SHEAR*1000/(PERIMETER*D)

  IF ((V>0.8*SQRT(FCU)).OR.(V>5)) THEN
    WRITE(*,*)"V=",V,'>0.8*SQRT(FCU)=',0.8*SQRT(FCU),"OR > 5"   
    WRITE(*,'(/"THE SECTION IS TOO SMALL, CHOOSE ONE OF THE FOLLOWING:",//,&
    &"1)CHANGE FCU"/"2)CHANGE COLUMN SIZE",/,"3)CHANGE SLAB DEPTH")')
    WRITE(5,*)"V=",V,'>0.8*SQRT(FCU)=',0.8*SQRT(FCU),"OR > 5"   
    WRITE(5,'(/"THE SECTION IS TOO SMALL, CHOOSE ONE OF THE FOLLOWING:",//,&
    &"1)CHANGE FCU"/"2)CHANGE COLUMN SIZE",/,"3)CHANGE SLAB DEPTH")')
    READ(*,*)CHOICE
    IF (CHOICE=='1') THEN
      CALL  FLAT_SLAB('YES')
    ELSE IF (CHOICE=='2') THEN
    WRITE(*,'(/"ENTER THE NEW COLUMN DIMENTIONS.")')
    READ(*,*)COLUMNX,COLUMNY
    PERIMETER=2*(COLUMNX+COLUMNY)
    GO TO 10
    ELSE IF (CHOICE=='3') THEN 
    CALL FLAT_SLAB('YES')  
    END IF
  ELSE
    WRITE(*,'("V = ",F6.2,"< 0.8*SQRT(FCU) = ",F6.2," AND < 5   #OK"/)')V,0.8*SQRT(FCU)
    WRITE(5,'("V = ",F6.2,"< 0.8*SQRT(FCU) = ",F6.2," AND < 5   #OK"/)')V,0.8*SQRT(FCU)
  END IF
  
!===========================================================================

WRITE(*,1333)
WRITE(5,1333)
1333 FORMAT(///T30,'PUNCHING SHEAR CHECK')
WRITE(*,'(T30,"===================="/)')
WRITE(5,'(T30,"===================="/)')


20 ASP=(DIA**2)*3.14/4
VC=design_concrete_shear_stress()

IF (HEAD>0) THEN
  PERIMETER=4*HEAD*1000+12*D
  WRITE(*,'(//" PUNCHING SHEAR PERIMETER AT COLUMN HEAD CRITICAL SECTION =", F10.2//)')PERIMETER
  WRITE(5,'(//" PUNCHING SHEAR PERIMETER AT COLUMN HEAD CRITICAL SECTION =", F10.2//)')PERIMETER
  V=MAXIMUM_SHEAR*1000/(PERIMETER*D)

  WRITE(*,*)MAXIMUM_SHEAR  
  
  
  IF(VC>V)THEN 
  WRITE(*,'(/"V = ",F5.2,"< VC = ",F6.2," #OK."/)')V,VC
  WRITE(5,'(/"V = ",F5.2,"< VC = ",F6.2," #OK."/)')V,VC
  ELSE
  WRITE(*,'(/"V = ",F5.2,"> VC = ",F6.2,"  SECTION DEPTH IS TOO SMALL TO RESIST SHEAR."/)')V,VC
  WRITE(5,'(/"V = ",F5.2,"> VC = ",F6.2,"  SECTION DEPTH IS TOO SMALL TO RESIST SHEAR."/)')V,VC
  END IF
  END IF
  
IF(PRESENT(DROP))THEN
  PERIMETER=4*(1000*DROP+3*D)
ELSE
  PERIMETER=2*((3*D+COLUMNX)+(3*D+COLUMNY))
END IF

WRITE(*,'(//" PUNCHING SHEAR PERIMETER =", F10.2//)')PERIMETER
WRITE(5,'(//" PUNCHING SHEAR PERIMETER =", F10.2//)')PERIMETER
V=MAXIMUM_SHEAR*1000/(PERIMETER*D)

WRITE(*,*)MAXIMUM_SHEAR  
  
  
IF(VC>V)THEN 
  WRITE(*,'(/"V = ",F5.2,"< VC = ",F6.2," #OK."/)')V,VC
  WRITE(5,'(/"V = ",F5.2,"< VC = ",F6.2," #OK."/)')V,VC
ELSE
  WRITE(*,'(/"V = ",F5.2,"> VC = ",F6.2,"  SECTION DEPTH IS TOO SMALL TO RESIST SHEAR."/)')V,VC
  WRITE(5,'(/"V = ",F5.2,"> VC = ",F6.2,"  SECTION DEPTH IS TOO SMALL TO RESIST SHEAR."/)')V,VC
  IF (PRESENT(DROP))THEN 
    WRITE(*,'("THE SECTION IS TOO SMALL, CHOOSE ONE OF THE FOLLOWING:",//,&
    &"1)INCREASE TOP REINFORCEMENT"/"2)CHANGE COLUMN SIZE",/,"3)CHANGE SLAB DEPTH"/"4)CHANGE SIZE OF DROP" )')
    WRITE(5,'("THE SECTION IS TOO SMALL, CHOOSE ONE OF THE FOLLOWING:",//,&
    &"1)INCREASE TOP REINFORCEMENT"/"2)CHANGE COLUMN SIZE",/,"3)CHANGE SLAB DEPTH"/"4)CHANGE SIZE OF DROP" )')
  ELSE 
    WRITE (*,'(/"THE SECTION IS TOO SMALL, CHOOSE ONE OF THE FOLLOWING:",//,"1)INCREASE TOP REINFORCEMENT"/,&
    &"2)CHANGE COLUMN SIZE",/,"3)CHANGE SLAB DEPTH")')
    WRITE (5,'(/"THE SECTION IS TOO SMALL, CHOOSE ONE OF THE FOLLOWING:",//,"1)INCREASE TOP REINFORCEMENT"/,&
    &"2)CHANGE COLUMN SIZE",/,"3)CHANGE SLAB DEPTH")')
  END IF
  READ(*,*)CHOICE
  
  IF (CHOICE=='1') THEN
    WRITE(*,*)"ENTER THE DIAMETER AND SPACING USED FOR THE TOP REINFORCEMENT OF COLUMN STRIP."
    READ(*,*)DIA,SPACING
    GOTO 20
      
  ELSE IF (CHOICE=='2') THEN
    WRITE(*,*)"/ENTER THE NEW COLUMN DIMENTIONS."
    READ(*,*)COLUMNX,COLUMNY
    PERIMETER=2*(COLUMNX+COLUMNY)
    GO TO 20
  ELSE IF (CHOICE=='3') THEN 
    CALL FLAT_SLAB('YES')  
  ELSE IF ((CHOICE=='4').AND.PRESENT(DROP)) THEN
 
    WRITE(*,'("/ENTER NEW DROP HEIGHT(MM) AND WIDTH(M)")')
    READ(*,*)DEPTH_OF_DROP,DROP
    DROP=DROP*1000
    GO TO 20
  END IF
END IF

WRITE(*,*)"DO YOU WANT TO CHANGE ANY OTHER PARAMETERS?  [YES] OR [NO]"
READ (*,*)CHOICE
CALL UCASE(CHOICE)
IF (CHOICE=='YES') CALL FLAT_SLAB('YES')

CONTAINS 

FUNCTION design_concrete_shear_stress()
REAL(double_precision)::design_concrete_shear_stress,A,P
A=(400/D)**0.25
IF (A<1) A=1
p=100*ASP/SPACING/D
design_concrete_shear_stress=0.79/1.25*p**(1./3.)*A*(fcu/25.)**(1./3.)
END function

END SUBROUTINE 
       
END MODULE                
!========================================================================================================================

!MISTAKE: WHEN DROPS ARE SMALL, THEIR EFFECT IS NON-EXIISTANT AND COLUMN AND MIDDLE STRIPS WIDTHS ARE NOT DROP WIDTH. 



 
 